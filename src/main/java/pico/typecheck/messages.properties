immutable.class.type.parameter.bound.invalid=Type parameter of immutable class has non-immutable effective upper bound: %s!
constructor.invocation.invalid=Cannot not instantiate type: %s out of constructor: %s
constructor.return.invalid=Invalid constructor return type: %s
immutable.class.constructor.invalid=Immutable class should only have immutable constructor
immutable.class.method.receiver.invalid=Immutable class instance method should only have immutable/readonly declared receiver
illegal.field.write=Cannot write field via receiver: %s
illegal.array.write=Cannot write array via receiver: %s
static.receiverdependantmutable.forbidden=%s is forbidden in static context
pico.new.invalid=Invalid new instance type: %s
field.polymutable.forbidden=Field %s cannot be @PolyMutable
subclass.constructor.invalid=Subclass constructor: %s is not compatible with super class constructor: %s
